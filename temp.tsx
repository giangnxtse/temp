# Integration test setup Guidelines

## Set up structure
- Create additional elements based on this structure:
ðŸ“¦ Root project folder
â”œâ”€â”€ ðŸ“‚ jenkins/
â”‚   â””â”€â”€ ðŸ“‚ deploy/
â”‚       â””â”€â”€ ðŸ“„ JenkinsFile          # Create if not exists
â”œâ”€â”€ ðŸ“‚ dev-setup/
â”‚   â”œâ”€â”€ ðŸ“„ docker-compose.yaml
â”‚   â”œâ”€â”€ ðŸ“‚ zap/
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ reports/
â”‚   â”‚   â””â”€â”€ ðŸ“‚ policies/
â”‚   â”œâ”€â”€ ðŸ“‚ wiremock-extensions/
â”‚   â”œâ”€â”€ ðŸ“‚ wiremock/
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ mappings/
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ grpc/
â”‚   â”‚   â””â”€â”€ ðŸ“‚ __files/
â”‚   â””â”€â”€ ðŸ“‚ postgres/
â”‚       â””â”€â”€ ðŸ“„ init.sql
â”œâ”€â”€ ðŸ“„ int_test.sh

- Determine service name, simply the name if its size longer than 15 characters
- in dev-setup:
    - postgres/init.sql: Create a schema based on service name
    - wiremock/__files: this folder contains response body content files for wiremock mappings
    - wiremock/grpc: this folder contains proto.dsc file for wiremock grpc mappings
    - wiremock/mappings: this folder contains wiremock mappings json file. Each downstream service should be a json file.
    - docker-compose.yaml: Docker compose configuration for all dependencies
- jenkins/deploy/JenkinsFile: create this file if not exists then enable intTestConfig:
``` 
spring_docker {
    ...other config
    intTestConfig = {
        enabled: true
    }
}
```
- 
